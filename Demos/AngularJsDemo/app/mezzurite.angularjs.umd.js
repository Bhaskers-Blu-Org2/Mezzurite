!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("angular"),require("@microsoft/mezzurite-core"),require("intersection-observer")):"function"==typeof define&&define.amd?define(["angular","@microsoft/mezzurite-core","intersection-observer"],t):t(e.angular,e.MezzuriteCore)}(this,function(e,t){"use strict";function r(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},i={name:"@microsoft/mezzurite-angularjs",version:"1.0.4",description:"Library for capturing SPA timings within AngularJS.",author:"Microsoft Corporation",license:"MIT",repository:{type:"git",url:"git+https://github.com/Microsoft/Mezzurite.git"},main:"./dist/index.js",types:"./dist/index.d.ts",module:"./dist-esm/index.js",scripts:{clean:"shx rm -rf browser dist dist-esm build/compiled",build:"npm run clean && rollup -c && npm run make-bundle && npm run post-build-cleanup","post-build-cleanup":"shx rm -rf dist/src dist-esm/src","post-clean":"shx rm -rf build/compiled","make-bundle":"node build/make-bundle"},dependencies:{"@microsoft/mezzurite-core":"^1.0.1","@types/angular":"^1.5.6","intersection-observer":"^0.5.1","reflect-metadata":"^0.1.8"},peerDependencies:{angular:"^1.6.6"},devDependencies:{angular:"^1.6.6","awesome-typescript-loader":"^5.2.0",concurrently:"^3.0.0","lite-server":"^2.2.2","npm-run-all":"^4.1.5",path:"^0.12.7",rollup:"^0.67.3","rollup-plugin-copy-glob":"^0.2.2","rollup-plugin-json":"^3.1.0","rollup-plugin-node-resolve":"^3.4.0","rollup-plugin-typescript2":"^0.17.2","rollup-plugin-uglify-es":"0.0.1",shx:"^0.3.1",tslib:"^1.9.3",typescript:"^2.9.2"}},o={version:i.version,name:i.name},a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r(t,e),t.createMezzuriteObject=function(t){e.createMezzuriteObject.call(this,t),window.mezzurite.packageVersion=o.version,window.mezzurite.packageName=o.name},t}(t.MezzuriteUtils),u=function(){function e(e){this.$timeout=e,this.firstLoad=!0,this.endCounter=0}return e.prototype.start=function(e,r){window.mezzurite||(window.mezzurite={}),a.createMezzuriteObject(window.mezzurite),window.mezzurite.routerPerf=!0,e.$on("$routeChangeStart",function(e,r,n){r&&r.$$route&&(window.mezzurite.recentPath!==r.$$route.originalPath&&(window.mezzurite.captureCycleStarted?(window.mezzurite.captureCycleStarted=!1,t.PerformanceTelemetryService.captureTimings(!0),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTelemetryService.startCaptureCycle()):(t.PerformanceTelemetryService.startCaptureCycle(),window.mezzurite.firstViewLoaded?window.performance.mark(t.MezzuriteConstants.vltMarkStart):(window.mezzurite.startTime=0,window.performance.mark(t.MezzuriteConstants.altMarkEnd),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTimingService.measure(a.getName(t.MezzuriteConstants.altName,a.makeId()),0,t.MezzuriteConstants.altMarkEnd)))),window.mezzurite.recentPath=r.$$route.originalPath)}),e.$on("$stateChangeStart",function(e,r,n,i,o,u){r&&r.url&&(window.mezzurite.captureCycleStarted?(window.mezzurite.captureCycleStarted=!1,t.PerformanceTelemetryService.captureTimings(!0),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTelemetryService.startCaptureCycle()):(t.PerformanceTelemetryService.startCaptureCycle(),window.mezzurite.firstViewLoaded?window.performance.mark(t.MezzuriteConstants.vltMarkStart):(window.performance.mark(t.MezzuriteConstants.altMarkEnd),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTimingService.measure(a.getName(t.MezzuriteConstants.altName,a.makeId()),0,t.MezzuriteConstants.altMarkEnd))))}),r&&r.onStart({},function(e){window.mezzurite.captureCycleStarted?(window.mezzurite.captureCycleStarted=!1,t.PerformanceTelemetryService.captureTimings(!0),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTelemetryService.startCaptureCycle()):(t.PerformanceTelemetryService.startCaptureCycle(),window.mezzurite.firstViewLoaded?window.performance.mark(t.MezzuriteConstants.vltMarkStart):(window.performance.mark(t.MezzuriteConstants.altMarkEnd),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTimingService.measure(a.getName(t.MezzuriteConstants.altName,a.makeId()),0,t.MezzuriteConstants.altMarkEnd)))})},e.$inject=["$timeout"],e}(),s=function(){function e(e,r){this.name=e,this.element=r,this.key=a.makeId(),window.performance.mark(this.key+t.MezzuriteConstants.componentMarkStart),this.fullName=t.MezzuriteConstants.measureNamePrefix+";"+this.name+";"+this.key,window.mezzurite.elementLookup[this.fullName]=r;var n={root:null,rootMargin:"0px"},i=this;new IntersectionObserver(function(e,t){var r=e[0];window.mezzurite.viewportWidth=r.rootBounds.width,window.mezzurite.viewportHeight=r.rootBounds.height,void 0!==i.fullName&&(r.isIntersecting?window.mezzurite.vltComponentLookup[i.fullName]=!0:window.mezzurite.vltComponentLookup[i.fullName]=!1),t.unobserve(i.element),i.element=null},n).observe(this.element)}return e.prototype.setComponentComplete=function(){window.performance.mark(this.key+t.MezzuriteConstants.componentMarkEnd)},e}(),m=function(){function e(){}return e.prototype.initPerfComponent=function(e,t){return new s(e,t)},e}();e.module("angularjsrouting",[]).service("AngularJsRoutingService",u).service("AngularJsPerfService",m)});
